__NUXT_JSONP__("/posts/spring-boot-monitor-with-react", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX){return {data:[{blockMap:{"307f532c-8572-4f84-b85e-b0258afc35a2":{value:{id:f,version:305,type:"page",properties:{"0#}p":[["‣",[["d",{type:"date",start_date:C}]]]],"IWg]":[[D]],MpSo:[[E]],"u\\k=":[[F,[[l,G]]]],"v\u003CK]":[["spring boot,React,js"]],"ysX^":[["Yes"]],title:[[H,[[k],[k]]]]},content:[I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN],created_time:1675230345134,last_edited_time:1686559262662,parent_id:y,parent_table:aO,alive:c,file_ids:["883b1c90-7934-45ea-94a9-ea00f899fac6"],created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"9c1dd87b-0464-49af-b1e3-07dca70f6b61":{value:{id:"9c1dd87b-0464-49af-b1e3-07dca70f6b61",version:126,type:"collection_view_page",view_ids:["b9fd954b-349b-46bb-8995-677927518ae7"],collection_id:y,format:{collection_pointer:{id:y,table:aO,spaceId:d},copied_from_pointer:{id:aP,table:g,spaceId:"0c084d44-207c-426c-8c5d-e7e6e298949b"}},permissions:[{role:"editor",type:"user_permission",user_id:a},{role:e,type:"public_permission",added_timestamp:1674543078967,allow_duplicate:false}],created_by:aQ,created_time:1674543065659,last_edited_by:aQ,last_edited_time:1686559144653,parent_id:d,parent_table:"space",alive:c,copied_from:aP,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"297e685b-7e72-47f7-afb3-016663f029f5":{value:{id:I,version:h,type:j,properties:{title:[["In this tutorial, we will be building a simple front end application with React that we will use to monitor uptime and downtime of a spring boot service. "],["I chose Spring boot because it provides us with HTTP endpoints that we can use for monitoring and managing our Spring Boot application with little effort on our part."]]},created_time:z,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"2c02daf9-8169-4374-8372-36fdeeb492e1":{value:{id:J,version:h,type:j,properties:{title:[["When the web service is not running or goes down for some reason, we want to automatically change the server icon color to red. When the service is up, we will set the server icon to green."]]},created_time:z,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"739480b2-7391-4464-8e01-9e51a4f3cff3":{value:{id:K,version:h,type:j,properties:{title:[["Here is a look at what we will be building:"]]},created_time:z,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"af9242f5-69d7-45d1-8bfb-166d083ff02f":{value:{id:L,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1400\u002F1*gCsCgdwPPiPvAMY-EzLTFw.gif"]]},format:{block_width:v},created_time:A,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"5dc24bbd-f87b-45fa-ae6d-7da3f62c3a3b":{value:{id:M,version:h,type:j,properties:{title:[["Ready! Let’s get started…"]]},created_time:A,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"d607eb9d-244c-415b-aace-383cc67e5cf7":{value:{id:N,version:h,type:aR,properties:{title:[["Part 1: Setup the Spring boot service",[[k]]]]},created_time:A,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"50462d5c-ff30-41e9-a352-b75a908a5e5c":{value:{id:O,version:h,type:j,properties:{title:[["Let’s head on over to "],[aS,[[l,aS]]],[" where we will bootstrap a spring boot project. Thanks to the folks at Pivotal for providing this handy tool! My setup looks like this:"]]},created_time:x,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"7f9204ae-c70b-4bdd-9b56-04081339cf2b":{value:{id:P,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1400\u002F1*sv2RL8lBViMUQzAX-lRWBA.png"]]},format:{block_width:v},created_time:x,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"c8fa52f0-4b45-4cdf-ac73-509fe86819b6":{value:{id:Q,version:h,type:j,properties:{title:[["Don’t forget to add the dependencies or else you will need to add them yourself in the pom.xml. Add the“"],["Spring Boot Actuator",[[k]]],["” and “"],["Spring Web Starter",[[k]]],["” dependencies. You need to search for the dependencies and add them. We need these dependencies so we can access Spring Boot’s actuator HTTP endpoints to monitor our service. We also don’t want to go through the hassle of setting up a web server. Luckily, with the Spring Web Starter we get an embedded Tomcat server."]]},created_time:x,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"766fc364-6096-4d9b-a383-34d4e15cf4a3":{value:{id:R,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1400\u002F1*ELOSfLW5V2qlnZbkv51gIg.png"]]},format:{block_width:v},created_time:x,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"6f6469e5-dc18-41be-ad4e-2baa03db59f5":{value:{id:S,version:h,type:j,properties:{title:[["Now you can go ahead and click “Generate the project”. A zip file will be downloaded to your computer containing the project files."]]},created_time:r,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"c76a34ff-e355-4874-bfc8-ecbed12a9bbd":{value:{id:T,version:h,type:j,properties:{title:[["Go ahead and unzip the folder and import the generated maven project in your favorite IDE."]]},created_time:r,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"76bc979e-ae9a-4802-bdfb-2b9a99228e3a":{value:{id:U,version:h,type:j,properties:{title:[["Run the service and you should see the console log below. The tomcat server starts on port 8080 by default."]]},created_time:r,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"a52a7fcb-87e2-406b-bbc5-17e43e157f21":{value:{id:V,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1400\u002F1*8-tLbWQQVhcMF4rL_U3bXA.png"]]},format:{block_width:v},created_time:r,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"bca9fcf5-7484-4a90-8b9e-22d9b8766047":{value:{id:W,version:h,type:"quote",properties:{title:[["So, how can we know when our service is up or down?"]]},created_time:r,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"cdc50807-c51e-4981-a99f-702ce27c6fec":{value:{id:X,version:h,type:j,properties:{title:[["The "],["Spring boot actuator",[[l,"https:\u002F\u002Fwww.baeldung.com\u002Fspring-boot-actuators"]]],[" dependency exposes several endpoints attached to the base path "],["\u002Factuator",[[k]]],[" that we can use to monitor our service. We will be using the "],["\u002Fhealth ",[[k]]],["endpoint that will return a JSON object that simply tells us if our service is up. To confirm that your service is up, go to h"],["ttp:\u002F\u002Flocalhost:8080\u002Factuator\u002Fhealth",[[l,w]]],[" and make sure you see the page below:"]]},created_time:r,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"aaf5e2b7-9288-42a4-b88b-647124a725fb":{value:{id:Y,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1058\u002F1*DYj5nt-CJcm3CkFpHSwjYw.png"]]},format:{block_width:529},created_time:r,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"ec2b4267-31ce-4559-be93-f605950aae61":{value:{id:Z,version:h,type:j,properties:{title:[["Great! Our spring boot service is running and we have a way to monitor it. Now, let’s move on the next section and setup the front end application with React."]]},created_time:s,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"a59687e8-837f-42b4-af4b-e6f0290100f5":{value:{id:_,version:h,type:aR,properties:{title:[["Part 2: Creating our React app",[[k]]]]},created_time:s,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"a97f78c6-a79d-4e32-a1c3-6cff2320a5f9":{value:{id:$,version:h,type:j,properties:{title:[["Let’s use Facebook’s "],["create-react-app",[[k],[l,"https:\u002F\u002Fgithub.com\u002Ffacebook\u002Fcreate-react-app"]]],[" tool to setup our project."]]},created_time:s,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"9f9cae24-70e5-497e-82c7-220c14301a8f":{value:{id:aa,version:h,type:m,properties:{title:[["$ create-react-app server-monitor"]],language:[[n]]},format:{code_wrap:c},created_time:s,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"9267cf69-dd41-4058-90b1-0492700203c3":{value:{id:ab,version:h,type:j,properties:{title:[["This may take some time depending on your machine. Once setup is complete, go ahead and start the application with the command:"]]},created_time:s,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"4f2a72da-683e-4b7e-b146-1333b794ed93":{value:{id:ac,version:h,type:m,properties:{title:[["$ npm start"]],language:[[n]]},format:{code_wrap:c},created_time:s,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"462fbf8a-3cf1-466e-a75c-f9be54d34718":{value:{id:ad,version:h,type:j,properties:{title:[["Go to "],[aT,[[l,aT]]],[" to make sure the application is running. If you see a spinning React logo you are good to go!"]]},created_time:s,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"c5299749-93b0-43a0-a591-e81274936487":{value:{id:ae,version:h,type:j,properties:{title:[["You will notice in the "],["\u002Fsrc",[[k]]],[" directory there are a number of files generated for us. Let’s remove all those files and create our own structure:"]]},created_time:B,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"5bd4f770-fd97-4c26-b69f-d89804dc20a0":{value:{id:af,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:480\u002F1*9Mzl7Ti2xnDZoio4Dgv6GA.png"]]},format:{block_width:240},created_time:B,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"5fa4bb21-1544-4eba-8681-e73655ebfdc5":{value:{id:ag,version:h,type:j,properties:{title:[["Rather than using the default structure, I like to refactor my react applications to make things more clear."]]},created_time:B,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"d754ab8e-d482-45f7-829b-208390c9ccb9":{value:{id:ah,version:h,type:j,properties:{title:[["To style our application a bit and get that cool server icon we saw before, we will be using "],["Semantic UI",[[l,"https:\u002F\u002Fsemantic-ui.com\u002F"]]],[". Let’s go ahead and include the CSS stylesheet within the \u003Chead\u003E tag in "],["public\u002Findex.html",[[k]]]]},created_time:u,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"e112ca1a-11a9-4689-a799-a4972e8d3db4":{value:{id:ai,version:h,type:m,properties:{title:[["\u003Clink rel=”stylesheet” href=”https:\u002F\u002Fcdnjs.cloudflare.com\u002Fajax\u002Flibs\u002Fsemantic-ui\u002F2.4.1\u002Fsemantic.min.css\"\u002F\u003E"]],language:[[n]]},format:{code_wrap:c},created_time:u,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"9c3ebaf4-6e08-4804-94e8-150d3c7725ea":{value:{id:aj,version:h,type:j,properties:{title:[[aU],["App.css ",[[k]]],["and paste the following code. This is just some additional styling we will add so our app is centered in the browser."]]},created_time:u,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"5a57a991-4a2c-4169-a624-887be4389516":{value:{id:ak,version:h,type:m,properties:{title:[[".main {\n display: flex;\n justify-content: center;\n text-align: center;\n}.main i {\n margin-left: auto;\n margin-right: auto;\n}"]],language:[[n]]},format:{code_wrap:c},created_time:u,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"70bcdb50-159e-46b7-9275-31c3b58d955b":{value:{id:al,version:h,type:j,properties:{title:[["Now, let’s get to coding! Open up the "],["App.js ",[[k]]],["file and copy in the starter code below."]]},created_time:u,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"fcb29604-bce7-471e-80a1-e963188f3a8a":{value:{id:am,version:h,type:m,properties:{title:[["import React from \"react\";\nimport springboot from \"..\u002Fapi\u002Fspringboot\";\nimport \".\u002FApp.css\";const ServerStat = {\n UP: {\n  color: \"green\"\n },\n DOWN: {\n  color: \"red\"\n }\n};class App extends React.Component {\n state = { server: \"\" };render() {\n  return (\n   \u003Cdiv className=\"main\"\u003E\n    \u003Cdiv className=\"ui card\"\u003E\n     \u003Cdiv className=\"content\"\u003E\n      \u003Ch3\u003ESpring Boot Server Monitor\u003C\u002Fh3\u003E\n     \u003C\u002Fdiv\u003E\n     \u003Ci className=\"massive server icon\" \u002F\u003E\n    \u003C\u002Fdiv\u003E\n   \u003C\u002Fdiv\u003E\n  );\n }\n}export default App;"]],language:[[n]]},format:{code_wrap:c},created_time:u,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"6f374661-d9cb-48f7-b65d-00bb22ea0086":{value:{id:an,version:h,type:j,properties:{title:[["We are using a class based component because we want to make use of "],["state. ",[[k]]],["We want to use the "],["server",[[k]]],[" object stored inside state to keep track of the server status."],[aV,[[k]]],["Remember we want the server icon color to be either green (up) or red (down) and this will reflect the server status."]]},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"9180f275-05e8-4c18-b9bb-22b96c130e88":{value:{id:ao,version:h,type:j,properties:{title:[["We need to render our App component so we can see the changes we’ve made so far in the browser. Let’s add the code below in the "],["index.js ",[[k]]],["file."]]},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"0d1e7850-e383-41b2-90ba-c6c048b62b9c":{value:{id:ap,version:h,type:m,properties:{title:[["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \".\u002Fcomponents\u002FApp\";ReactDOM.render(\u003CApp \u002F\u003E, document.querySelector(\"#root\"));"]],language:[[n]]},format:{code_wrap:c},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"048fb91f-39a4-4019-bf3a-232c62ddbdf7":{value:{id:aq,version:h,type:j,properties:{title:[["Your application should now look like this:"]]},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"05e17809-e84e-4920-bcfc-e1b3eebdbeff":{value:{id:ar,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:736\u002F1*asTPtxKgS8MVRz_nBUNFOQ.png"]]},format:{block_width:368},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"db4cd9c7-8697-4463-aa85-64744a81c5c4":{value:{id:as,version:h,type:j,properties:{title:[["Looking good so far but the server icon is not telling us anything useful yet."]]},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"226a4d58-2dd0-4d14-8998-2d210cad2616":{value:{id:at,version:h,type:j,properties:{title:[["We need to contact the Spring boot actuator endpoint at "],[w,[[l,w]]],[" so we are able to check the service status. To do this we will be using the "],["axios",[[k],[l,"https:\u002F\u002Fgithub.com\u002Faxios\u002Faxios"]]],[aV,[[k]]],["HTTP client"],[aW,[[k]]]]},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"a63ee3db-3fe4-4b67-a131-9f8295c8136d":{value:{id:au,version:h,type:j,properties:{title:[["Let’s install axios with the following command:"]]},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"6a662c99-cdb8-497c-a200-3c6b81328bfa":{value:{id:av,version:h,type:m,properties:{title:[["$ npm install axios --save"]],language:[[n]]},format:{code_wrap:c},created_time:o,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"6ff68431-7ef2-4f20-bb7f-f1b0c1d62e99":{value:{id:aw,version:h,type:j,properties:{title:[[aU],["springboot.js ",[[k]]],["and copy the code below. What we are doing here is creating an instance of axios that we will use in our App component. axios returns a promise containing the result from the HTTP request."]]},created_time:t,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"3d44c700-7c59-416f-90dd-dc7b97b601b3":{value:{id:ax,version:h,type:m,properties:{title:[["import axios from \"axios\";export default axios.create({\n baseURL: \"http:\u002F\u002Flocalhost:8080\"\n});"]],language:[[n]]},format:{code_wrap:c},created_time:t,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"582b6e6d-06b8-43a4-ab3a-0f868978d7bc":{value:{id:ay,version:h,type:j,properties:{title:[["Now, let’s create an arrow function called "],["checkServerHealth() ",[[k]]],["inside the App class component. We need to perform a GET request to "],["\u002Factuator\u002Fhealth. ",[[k]]],["Notice that we didn’t have to specify "],[w,[[l,w]]],[" because we already configured the axios instance above with the "],["baseURL.",[[k]]]]},created_time:t,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"1c3c5f11-a477-4827-add7-c161bb89428a":{value:{id:az,version:h,type:m,properties:{title:[["checkServerHealth = async () =\u003E {\n try {\n   await springboot.get(\"\u002Factuator\u002Fhealth\");\n   this.setState({ server: ServerStat[\"UP\"] });\n } catch (error) {\n   this.setState({ server: ServerStat[\"DOWN\"] });\n }\n};"]],language:[[n]]},format:{code_wrap:c},created_time:t,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"e5b02342-8a44-44d8-965d-004e98e66da7":{value:{id:aA,version:h,type:j,properties:{title:[["To handle the promise returned from axios we will use "],["async\u002Fawait",[[l,"https:\u002F\u002Fjavascript.info\u002Fasync-await"]]],[". We need to specify "],["async ",[[k]]],["because our function will definitely return a Promise. "],["await ",[[k]]],["will eventually return a result once the promise is settled. I personally like using async\u002Fawait because I feel it makes my code look cleaner. So once there are no problems getting a response from the "],["\u002Factuator\u002Fhealth ",[[k]]],["endpoint, we use "],["setState()",[[k]]],[" to update the "],["server ",[[k]]],["object with the color green signaling that the service is up. If we can’t resolve the promise, therefore no result, we set the color to red signaling that we can’t contact the spring boot service."]]},created_time:t,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"cc7b7cb7-e7c0-45be-b6c2-eb20b44b2ee6":{value:{id:aB,version:h,type:j,properties:{title:[["Now, let’s update the "],["render()",[[k]]],[" method. "],["this.state.server ",[[k]]],["will be updated with the appropriate color whenever we call the checkServerHealth() async function. We want to update our UI so we can dynamically see changes to the server icon color."]]},created_time:t,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"38806bc1-555c-48ac-915f-8c5ea474e46f":{value:{id:aC,version:h,type:m,properties:{title:[["render() {\n const { color } = this.state.server;return (\n   \u003Cdiv className=\"main\"\u003E\n    \u003Cdiv className=\"ui card\"\u003E\n     \u003Cdiv className=\"content\"\u003E\n      \u003Ch3\u003ESpring Boot Server Monitor\u003C\u002Fh3\u003E\n     \u003C\u002Fdiv\u003E\n     \u003Ci className={`massive server icon ${color}`}\u002F\u003E\n    \u003C\u002Fdiv\u003E\n   \u003C\u002Fdiv\u003E\n  );\n }\n}"]],language:[[n]]},format:{code_wrap:c},created_time:t,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"7f43408a-5b61-441a-a17f-6a675f472d8c":{value:{id:aD,version:h,type:j,properties:{title:[["Now, if the spring boot service goes down in the next 5 minutes for example, we want to be notified almost immediately. We also want to be notified when it comes back online. So, we will need to be checking the server status from time to time to get real time updates. To support this function, we will use JavaScript’s "],["setInterval",[[k]]],["() function to trigger the checkServerHealth() function every 800ms. This logic will be triggered immediately after the App component is mounted. Notice that we are passing an arrow function to setInterval(). This is because we want "],["this ",[[k]]],["to refer to the App class component."]]},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"1f76b92e-c4fd-4610-a6f6-cf5c303b3b2e":{value:{id:aE,version:h,type:m,properties:{title:[["componentDidMount() {\n setInterval(() =\u003E this.checkServerHealth(), 800);\n}"]],language:[[n]]},format:{code_wrap:c},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"03ad10e5-1c49-4bfc-a2db-0b802d08d5e7":{value:{id:aF,version:h,type:j,properties:{title:[["Great! Open up your browser and everything should work."]]},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"2d2f2ffd-cace-4e6f-b289-b343f3bdc776":{value:{id:aG,version:h,type:j,properties:{title:[["But Wait! The spring boot service is up but the server icon is red!!!! If this is the case, check the browser console for an error like:"]]},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"3112545b-e324-48b5-b5dc-165e5288d94b":{value:{id:aH,version:h,type:q,properties:{source:[["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1400\u002F1*RHyaXaNALhDJ0L_N-7MAyQ.png"]]},format:{block_width:v},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"62b86af8-24ab-4fcd-abda-50b12e7015c5":{value:{id:aI,version:h,type:j,properties:{title:[["This is because we are trying to access the resource from a different origin.To allow our react application to contact the service we need to allow it through. Add these lines of code in "],["src\u002Fmain\u002Fresources\u002Fapplication.properties ",[[k]]],["in the spring boot project."]]},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"db0c9d7c-9edc-4cc8-b1fd-23668ec900b0":{value:{id:aJ,version:h,type:m,properties:{title:[["management.endpoints.web.cors.allowed-origins=http:\u002F\u002Flocalhost:3000\nmanagement.endpoints.web.cors.allowed-methods=GET"]],language:[[n]]},format:{code_wrap:c},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"7af48cd0-4607-4da0-a246-7ccc4b5c2dc3":{value:{id:aK,version:h,type:j,properties:{title:[["Restart the spring boot service. You should notice the server icon color change to green almost immediately. Try stopping the spring boot service and observe the server icon change back to red."]]},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"08e7d989-fd06-44d1-8ddb-4dfe346d53ee":{value:{id:aL,version:h,type:j,properties:{title:[["You did it!"]]},created_time:p,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"ffe06799-203b-48bc-88b8-40a7c6b1ccda":{value:{id:aM,version:4,type:j,properties:{title:[["I hope you liked this article and it has been helpful to you! You can find all the code for this tutorial "],["here",[[l,"https:\u002F\u002Fgithub.com\u002Fnweat\u002Fserver-monitor"]]],[aW]]},created_time:aX,last_edited_time:1686559290723,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e},"52d83cfe-197a-4a6e-9d30-cd33f0200da7":{value:{id:aN,version:h,type:j,properties:{title:[["Cheers!"]]},created_time:aX,last_edited_time:i,parent_id:f,parent_table:g,alive:c,created_by_table:b,created_by_id:a,last_edited_by_table:b,last_edited_by_id:a,space_id:d},role:e}},page:{id:f,created_at:C,description:D,slug:E,thumbnail:[{name:F,url:"https:\u002F\u002Fwww.notion.so\u002Fimage\u002Fhttps:%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F883b1c90-7934-45ea-94a9-ea00f899fac6%2F1_gCsCgdwPPiPvAMY-EzLTFw.gif?table=block&id=307f532c-8572-4f84-b85e-b0258afc35a2&cache=v2",rawUrl:G}],tags:["spring boot","React","js"],public:c,title:H}}],fetch:{},mutations:void 0}}("0ba378f9-5b11-430d-9082-a2e34abcf232","notion_user",true,"47a01032-533f-4ceb-bcb9-a3dc11827e3b","comment_only","307f532c-8572-4f84-b85e-b0258afc35a2","block",2,1686559263958,"text","b","a","code","Plain Text",1686559263937,1686559263939,"image",1686559263933,1686559263934,1686559263938,1686559263936,700,"http:\u002F\u002Flocalhost:8080\u002Factuator\u002Fhealth",1686559263932,"37d78f77-e97d-4340-a3e5-d0d39dcf4600",1686559263930,1686559263931,1686559263935,"2019-09-04","This post is a tutorial for building a simple front end application with React used to monitor the uptime and downtime of a spring boot service","spring-boot-monitor-with-react","1_gCsCgdwPPiPvAMY-EzLTFw.gif","https:\u002F\u002Fs3-us-west-2.amazonaws.com\u002Fsecure.notion-static.com\u002F883b1c90-7934-45ea-94a9-ea00f899fac6\u002F1_gCsCgdwPPiPvAMY-EzLTFw.gif","Create a Server Monitor with React and Spring boot","297e685b-7e72-47f7-afb3-016663f029f5","2c02daf9-8169-4374-8372-36fdeeb492e1","739480b2-7391-4464-8e01-9e51a4f3cff3","af9242f5-69d7-45d1-8bfb-166d083ff02f","5dc24bbd-f87b-45fa-ae6d-7da3f62c3a3b","d607eb9d-244c-415b-aace-383cc67e5cf7","50462d5c-ff30-41e9-a352-b75a908a5e5c","7f9204ae-c70b-4bdd-9b56-04081339cf2b","c8fa52f0-4b45-4cdf-ac73-509fe86819b6","766fc364-6096-4d9b-a383-34d4e15cf4a3","6f6469e5-dc18-41be-ad4e-2baa03db59f5","c76a34ff-e355-4874-bfc8-ecbed12a9bbd","76bc979e-ae9a-4802-bdfb-2b9a99228e3a","a52a7fcb-87e2-406b-bbc5-17e43e157f21","bca9fcf5-7484-4a90-8b9e-22d9b8766047","cdc50807-c51e-4981-a99f-702ce27c6fec","aaf5e2b7-9288-42a4-b88b-647124a725fb","ec2b4267-31ce-4559-be93-f605950aae61","a59687e8-837f-42b4-af4b-e6f0290100f5","a97f78c6-a79d-4e32-a1c3-6cff2320a5f9","9f9cae24-70e5-497e-82c7-220c14301a8f","9267cf69-dd41-4058-90b1-0492700203c3","4f2a72da-683e-4b7e-b146-1333b794ed93","462fbf8a-3cf1-466e-a75c-f9be54d34718","c5299749-93b0-43a0-a591-e81274936487","5bd4f770-fd97-4c26-b69f-d89804dc20a0","5fa4bb21-1544-4eba-8681-e73655ebfdc5","d754ab8e-d482-45f7-829b-208390c9ccb9","e112ca1a-11a9-4689-a799-a4972e8d3db4","9c3ebaf4-6e08-4804-94e8-150d3c7725ea","5a57a991-4a2c-4169-a624-887be4389516","70bcdb50-159e-46b7-9275-31c3b58d955b","fcb29604-bce7-471e-80a1-e963188f3a8a","6f374661-d9cb-48f7-b65d-00bb22ea0086","9180f275-05e8-4c18-b9bb-22b96c130e88","0d1e7850-e383-41b2-90ba-c6c048b62b9c","048fb91f-39a4-4019-bf3a-232c62ddbdf7","05e17809-e84e-4920-bcfc-e1b3eebdbeff","db4cd9c7-8697-4463-aa85-64744a81c5c4","226a4d58-2dd0-4d14-8998-2d210cad2616","a63ee3db-3fe4-4b67-a131-9f8295c8136d","6a662c99-cdb8-497c-a200-3c6b81328bfa","6ff68431-7ef2-4f20-bb7f-f1b0c1d62e99","3d44c700-7c59-416f-90dd-dc7b97b601b3","582b6e6d-06b8-43a4-ab3a-0f868978d7bc","1c3c5f11-a477-4827-add7-c161bb89428a","e5b02342-8a44-44d8-965d-004e98e66da7","cc7b7cb7-e7c0-45be-b6c2-eb20b44b2ee6","38806bc1-555c-48ac-915f-8c5ea474e46f","7f43408a-5b61-441a-a17f-6a675f472d8c","1f76b92e-c4fd-4610-a6f6-cf5c303b3b2e","03ad10e5-1c49-4bfc-a2db-0b802d08d5e7","2d2f2ffd-cace-4e6f-b289-b343f3bdc776","3112545b-e324-48b5-b5dc-165e5288d94b","62b86af8-24ab-4fcd-abda-50b12e7015c5","db0c9d7c-9edc-4cc8-b1fd-23668ec900b0","7af48cd0-4607-4da0-a246-7ccc4b5c2dc3","08e7d989-fd06-44d1-8ddb-4dfe346d53ee","ffe06799-203b-48bc-88b8-40a7c6b1ccda","52d83cfe-197a-4a6e-9d30-cd33f0200da7","collection","ceef6f1a-895a-46b2-a0e4-a87b41405547","204e031f-f12d-445c-ba1d-df7a7bbebfbc","header","https:\u002F\u002Fstart.spring.io\u002F","http:\u002F\u002Flocalhost:3000\u002F","Open up "," ",".",1686559263940)));